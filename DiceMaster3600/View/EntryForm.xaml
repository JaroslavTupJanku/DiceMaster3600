<Window x:Class="DiceMaster3600.View.Dialogs.EntryForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:DiceMaster3600.View.Converters"
        xmlns:controls="clr-namespace:DiceMaster3600.View.Controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:enum="clr-namespace:DiceMaster3600.Core.Enum;assembly=DiceMaster3600.Core"
        WindowStartupLocation="CenterScreen"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:DiceMaster3600.ViewModel"
        d:DataContext="{d:DesignInstance Type=vm:EntryFormViewModel}"
        SizeToContent="Height"
        mc:Ignorable="d"  ResizeMode="CanResize" Title="EntryForm" Width="800"  >

    <Window.Resources>
        <converters:GenderToColorBrushConverter x:Key="GenderBrushConverter"/>

        <ObjectDataProvider x:Key="universityTypeValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:UniversityType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="FacultyTypeValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:FacultyType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource MeoptaBackgroundBrush}"/>
        </Style>

        <Style x:Key="BaseTextBoxStyle" TargetType="TextBox">
            <Setter Property="Width" Value="380"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.75"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="{StaticResource MeoptaBackgroundBrush}"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#60e6c4"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>


        <Grid Background="{StaticResource MeoptaBlueBrush}">
            <StackPanel VerticalAlignment="Center" 
                        HorizontalAlignment="Center" 
                        Background="Transparent">
                <Grid Grid.Row="0">
                    <controls:RoundedIcon Size="120"
                        EllipseFill="{StaticResource MeoptaYellowBrush}" 
                        IconKind="FaceFemale" 
                        IconForeground="{StaticResource MeoptaLogoWhiteBrush}" />
                </Grid>
                <TextBlock Text="Lets get you set up" 
                           FontSize="25" 
                           Margin="0,20" 
                           FontWeight="Bold" 
                           Foreground="WhiteSmoke"/>
                <TextBlock Text="it should only take a couple of minutes to registrate" 
                           TextAlignment="Center" 
                           TextWrapping="Wrap" 
                           Foreground="WhiteSmoke"/>
            </StackPanel>
        </Grid>

        <Grid Margin="10" Grid.Column="1">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Label Content="Create account." 
                   FontSize="16" 
                   FontWeight="Bold" 
                   Foreground="Black" 
                   HorizontalAlignment="Left"/>

            <StackPanel Grid.Row="1" HorizontalAlignment="Center">
                
                <TextBlock Text="Name" Style="{StaticResource BaseTextBlockStyle}" Margin="0,20,0,0"/>
                <TextBox  Style="{StaticResource BaseTextBoxStyle}" Text="{Binding Name}" />
                <TextBlock Text="Surname" Style="{StaticResource BaseTextBlockStyle}" />
                <TextBox  Style="{StaticResource BaseTextBoxStyle}" Text="{Binding Surname}"/>
                <TextBlock Text="Date of Birth" Style="{StaticResource BaseTextBlockStyle}" />
                <DatePicker SelectedDate="{Binding DateOfBirth, Mode=TwoWay}" 
                            BorderThickness="0,0,0,1"
                            Margin="0,10,0,0"/>
                <TextBlock Text="Gender" Style="{StaticResource BaseTextBlockStyle}" />
                <Grid HorizontalAlignment="Left" Margin="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Style="{StaticResource CircularButton}" Grid.Column="0" 
                            Name="MaleRoundeButton"
                            Height="50"
                            Background="Transparent" 
                            Command="{Binding  Path=GenderSelectCommand}" CommandParameter="{x:Static enum:Gender.Male}">
                        <controls:RoundedIcon 
                            IconKind="GenderMale" 
                            Size="{Binding ElementName=MaleRoundeButton, Path=ActualHeight}"
                            EllipseFill="{Binding Path=SelectedGender, Converter={StaticResource GenderBrushConverter}, ConverterParameter={x:Static enum:Gender.Male}}" 
                            IconForeground="White"/>
                    </Button>
                    <Button Name="FemaleRoundeButton"
                            Grid.Column="2" 
                            Style="{StaticResource CircularButton}"
                            Background="Transparent" 
                            Command="{Binding Path=GenderSelectCommand}" CommandParameter="{x:Static enum:Gender.Female}">
                        <controls:RoundedIcon 
                            Size="{Binding ElementName=MaleRoundeButton, Path=ActualHeight}"
                            IconKind="GenderFemale" 
                            EllipseFill="{Binding Path=SelectedGender, Converter={StaticResource GenderBrushConverter}, ConverterParameter={x:Static enum:Gender.Female}}" 
                            IconForeground="White"/>
                    </Button>
                    <Button Grid.Column="4" 
                            Name="NonGenderButton"
                            Background="Transparent" 
                            Style="{StaticResource CircularButton}"
                            Command="{Binding Path=GenderSelectCommand}" CommandParameter="{x:Static enum:Gender.None}">
                        <controls:RoundedIcon 
                            IconKind="GenderMaleFemale" 
                            Size="{Binding ElementName=NonGenderButton, Path=ActualHeight}"
                            EllipseFill="{Binding Path=SelectedGender, Converter={StaticResource GenderBrushConverter}, ConverterParameter={x:Static enum:Gender.None}}" 
                            IconForeground="White"/>
                    </Button>
                </Grid>

                <TextBlock Text="University" Style="{StaticResource BaseTextBlockStyle}" Margin="0,30,0,0" />
                <ComboBox ItemsSource="{Binding Source={StaticResource universityTypeValues}}"
                          Style="{StaticResource BaseComboBoxStyle}"
                          Width="380" Height="25"
                          BorderThickness="0,0,0,1"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding University}" />
                <TextBlock Text="Faculty" Style="{StaticResource BaseTextBlockStyle}" />
                <ComboBox ItemsSource="{Binding Source={StaticResource FacultyTypeValues}}"
                          Style="{StaticResource BaseComboBoxStyle}"
                          Width="380" Height="25"
                          BorderThickness="0,0,0,1"
                          DisplayMemberPath="Description"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding Faculty}" />
                <TextBlock Text="Email" Style="{StaticResource BaseTextBlockStyle}"/>
                <TextBox  Style="{StaticResource BaseTextBoxStyle}" Text="{Binding Path=Email}"/>

                <TextBlock Text="Password" Style="{StaticResource BaseTextBlockStyle}" />
                <PasswordBox x:Name="txtPassword" Width="380" Height="25" BorderThickness="0,0,0,1" FontSize="15"/>

                <StackPanel Orientation="Horizontal" Margin="0,40,0,0" HorizontalAlignment="Center" >
                    <Button Content="Save"
                            Command="{Binding Path=SaveCommand}"
                            Style="{StaticResource SaveButtonStyle}"></Button>
                    <Button Content="Cancel" 
                            Command="{Binding Path=CancelCommand}"
                            Style="{StaticResource CancelButtonStyle}"></Button>
                </StackPanel>
            </StackPanel>
        </Grid>
        
        <materialDesign:Snackbar x:Name="MySnackbar"
                                 Grid.ColumnSpan="2"
                                 MessageQueue="{Binding Path=MessageQueue}"
                                 Style="{StaticResource DynamicSnackbarStyle}"/>
    </Grid>
</Window>

